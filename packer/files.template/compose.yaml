version: '3.8'

services:
  # VersityGW Instance 1
  versitygw-1:
    image: versity/versitygw:latest
    container_name: versitygw-1
    command: [
      "posix",
      "/data",
      "--metrics-statsd-servers", "127.0.0.1:8125",
      "--metrics-service-name", "${HOSTNAME}-vgw1"
    ]
    environment:
      - VGW_PORT=7070
      - VGW_HEALTH=/health
      - VGW_REGION=${AWS_REGION}
      - VGW_IAM_DIR=/app/iam
      - VGW_VIRTUAL_DOMAIN=${VGW_VIRTUAL_DOMAIN}
      - VGW_ROOT_ACCESS_KEY=${ROOT_ACCESS_KEY}
      - VGW_ROOT_SECRET_KEY=${ROOT_SECRET_KEY}
    volumes:
      - /data:/data
      - /app/iam:/app/iam
    ports:
      - "7070:7070"
    depends_on:
      - lucidlink-1
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # VersityGW Instance 2
  versitygw-2:
    image: versity/versitygw:latest
    container_name: versitygw-2
    command: [
      "posix",
      "/data",
      "--metrics-statsd-servers", "127.0.0.1:8125",
      "--metrics-service-name", "${HOSTNAME}-vgw2"
    ]
    environment:
      - VGW_PORT=7071
      - VGW_HEALTH=/health
      - VGW_REGION=${AWS_REGION}
      - VGW_IAM_DIR=/app/iam
      - VGW_VIRTUAL_DOMAIN=${VGW_VIRTUAL_DOMAIN}
      - VGW_ROOT_ACCESS_KEY=${ROOT_ACCESS_KEY}
      - VGW_ROOT_SECRET_KEY=${ROOT_SECRET_KEY}
    volumes:
      - /data:/data
      - /app/iam:/app/iam
    ports:
      - "7071:7071"
    depends_on:
      - lucidlink-1
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # VersityGW Instance 3
  versitygw-3:
    image: versity/versitygw:latest
    container_name: versitygw-3
    command: [
      "posix",
      "/data",
      "--metrics-statsd-servers", "127.0.0.1:8125",
      "--metrics-service-name", "${HOSTNAME}-vgw3"
    ]
    environment:
      - VGW_PORT=7072
      - VGW_HEALTH=/health
      - VGW_REGION=${AWS_REGION}
      - VGW_IAM_DIR=/app/iam
      - VGW_VIRTUAL_DOMAIN=${VGW_VIRTUAL_DOMAIN}
      - VGW_ROOT_ACCESS_KEY=${ROOT_ACCESS_KEY}
      - VGW_ROOT_SECRET_KEY=${ROOT_SECRET_KEY}
    volumes:
      - /data:/data
      - /app/iam:/app/iam
    ports:
      - "7072:7072"
    depends_on:
      - lucidlink-1
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Minio Sidekick Load Balancer
  minio-sidekick:
    image: minio/sidekick:latest
    container_name: minio-sidekick
    command: [
      "--health-path", "/health",
      "--address", ":9000",
      "http://versitygw-1:7070",
      "http://versitygw-2:7071",
      "http://versitygw-3:7072"
    ]
    ports:
      - "9000:9000"
    depends_on:
      - versitygw-1
      - versitygw-2
      - versitygw-3
    restart: unless-stopped

  # LucidLink Service
  lucidlink-1:
    image: lucidlink/lucidlink:latest
    container_name: lucidlink-1
    privileged: true
    environment:
      - FILESPACE1=${FILESPACE1}
      - FSUSER1=${FSUSER1}
      - LLPASSWD1=${LLPASSWD1}
      - FSVERSION=${FSVERSION}
    volumes:
      - /data:/data:shared
      - /dev/fuse:/dev/fuse
    restart: unless-stopped
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse:/dev/fuse

  # StatsD Exporter for Prometheus
  statsd-exporter:
    image: prom/statsd-exporter:v0.26.0
    container_name: statsd-exporter
    ports:
      - "9102:9102"
      - "8125:8125/udp"
    command:
      - '--statsd.mapping-config=/etc/statsd-exporter/mapping.yml'
    volumes:
      - /app/monitoring/statsd-mapping.yml:/etc/statsd-exporter/mapping.yml:ro
    restart: unless-stopped

  # Prometheus
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - /app/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana
  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    ports:
      - "3003:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://s3-metrics.${FQDOMAIN}
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
    volumes:
      - grafana-data:/var/lib/grafana
      - /app/monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - /app/monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    restart: unless-stopped

volumes:
  prometheus-data:
  grafana-data:

networks:
  default:
    name: s3gw-network